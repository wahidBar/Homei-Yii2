<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "t_penawaran_detail".
 *
 * @property integer $id
 * @property integer $id_penawaran
 * @property integer $id_material
 * @property integer $kisaran_harga
 * @property integer $jumlah
 * @property integer $sub_harga
 *
 * @property \app\models\Penawaran $penawaran
 * @property \app\models\MasterMaterial $material
 * @property string $aliasModel
 */
abstract class PenawaranDetail extends \yii\db\ActiveRecord
{



    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];
    public $submaterial_id;
    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['id_penawaran'])) :
            unset($parent['id_penawaran']);
            $parent['id_penawaran'] = function ($model) {
                return $model->id_penawaran;
            };
            $parent['_penawaran'] = function ($model) {
                $rel = $model->getPenawaran()->select([
                    "id_isian_lanjutan",
                    "kode_isian_lanjutan",
                    "kode_unik",
                    "kode_penawaran",
                    "tgl_transaksi",
                    "estimasi_waktu",
                    "harga_penawaran",
                    "total_harga_penawaran"
                ])->one();
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['id_material'])) :
            unset($parent['id_material']);
            $parent['id_material'] = function ($model) {
                return $model->id_material;
            };
            $parent['_material'] = function ($model) {
                $rel = $model->getSupplierBarang()->select([
                    "supplier_id",
                    "material_id",
                    "submaterial_id",
                    "nama_barang",
                    "slug",
                    "satuan_id",
                    // "panjang",
                    // "lebar",
                    // "tebal",
                    // "stok",
                    // "harga_ritel",
                    "harga_proyek",
                    // "minimal_beli_satuan",
                    // "minimal_beli_volume",
                    "deskripsi",
                    "gambar",
                    "params",
                    // "created_at",
                    // "updated_at",
                    // "created_by",
                    // "updated_by",
                    // "deleted_by",
                    // "status",
                    // "flag",
                ])->one();
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        // if(isset($parent['id_material'])) :
        //     unset($parent['id_material']);
        //     $parent['id_material'] = function($model) {
        //         return $model->id_material;
        //     };
        //     $parent['_material'] = function($model) {
        //         $rel = $model->material;
        //         if ($rel) :
        //             return $rel;
        //         endif;
        //         return null;
        //     };
        // endif;
        if (isset($parent['kisaran_harga'])) :
            unset($parent['kisaran_harga']);
            $parent['kisaran_harga'] = function ($model) {
                return $model->kisaran_harga;
            };
        endif;
        if (isset($parent['jumlah'])) :
            unset($parent['jumlah']);
            $parent['jumlah'] = function ($model) {
                return $model->jumlah;
            };
        endif;
        if (isset($parent['volume'])) :
            unset($parent['volume']);
            $parent['volume'] = function ($model) {
                return $model->volume;
            };
        endif;
        if (isset($parent['sub_harga'])) :
            unset($parent['sub_harga']);
            $parent['sub_harga'] = function ($model) {
                return $model->sub_harga;
            };
        endif;



        return $parent;
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_penawaran_detail';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['kode_unik', 'jumlah', 'id_penawaran', 'id_material', 'submaterial_id', 'kisaran_harga'], 'required'],
            [['kode_unik'], 'unique'],
            [['kode_penawaran'], 'string', 'max' => 50],
            [['kisaran_harga', 'sub_harga'], 'double'],
            [['id_penawaran', 'id_material', 'jumlah', 'volume', 'submaterial_id'], 'integer'],
            [['jumlah'], 'integer', 'min' => 1],
            [['id_penawaran'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Penawaran::className(), 'targetAttribute' => ['id_penawaran' => 'id']],
            [['id_material'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\SupplierBarang::className(), 'targetAttribute' => ['id_material' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'id_penawaran' => 'Penawaran',
            'id_material' => 'Material',
            'submaterial_id' => 'Sub Material',
            'kisaran_harga' => 'Kisaran Harga',
            'jumlah' => 'Jumlah',
            'volume' => 'Volume',
            'sub_harga' => 'Sub Harga',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'kisaran_harga' => 'kisaran harga diambil dari harga terkini di tabel harga material wilayah tersebut',
            'jumlah' => 'estimasi jumlah barang yang akan digunakan',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPenawaran()
    {
        return $this->hasOne(\app\models\Penawaran::className(), ['id' => 'id_penawaran']);
    }

    public function getSupplierBarang()
    {
        return $this->hasOne(\app\models\SupplierBarang::className(), ['id' => 'id_material']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    // public function getMaterial()
    // {
    //     return $this->hasOne(\app\models\MasterMaterial::className(), ['id' => 'id_material']);
    // }



    /**
     * @inheritdoc
     * @return \app\models\query\PenawaranDetailQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\PenawaranDetailQuery(get_called_class());
    }



    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'id_penawaran',
            'id_material',
            'kisaran_harga',
            'jumlah',
            'volume',
            'sub_harga',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    public function setRender($arr)
    {
        $this->_render = array_merge($this->_render, $arr);
    }

    public function removeRender($arr)
    {
        unset($this->_render[$arr]);
    }

    /**
     * Simplify return data xD
     */
    public function render()
    {
        return array_merge($this->_render, [
            "model" => $this,
        ]);
    }

    /**
     * override validate
     */
    public function validate($attributeNames = null, $clearErrors = true)
    {
        return parent::validate($attributeNames, $clearErrors);
    }

    /**
     * override load
     */
    public function load($data, $formName = null, $service = "web")
    {
        return parent::load($data, $formName);
    }
}
