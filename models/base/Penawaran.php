<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "t_penawaran".
 *
 * @property integer $id
 * @property integer $id_isian_lanjutan
 * @property integer $estimasi_waktu
 * @property integer $harga_penawaran
 *
 * @property \app\models\DealPelanggan[] $dealPelanggans
 * @property \app\models\IsianLanjutan[] $isianLanjutans
 * @property \app\models\IsianLanjutan $isianLanjutan
 * @property \app\models\PenawaranDetail[] $penawaranDetails
 * @property string $aliasModel
 */
abstract class Penawaran extends \yii\db\ActiveRecord
{



    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];
    public $id_kota;
    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['estimasi_waktu'])) :
            unset($parent['estimasi_waktu']);
            $parent['estimasi_waktu'] = function ($model) {
                return $model->estimasi_waktu;
            };
        endif;
        if (isset($parent['harga_penawaran'])) :
            unset($parent['harga_penawaran']);
            $parent['harga_penawaran'] = function ($model) {
                return $model->harga_penawaran;
            };
        endif;

        if (isset($parent['kode_unik'])) :
            unset($parent['kode_unik']);
            $parent['kode_unik'] = function ($model) {
                return $model->kode_unik;
            };
        endif;
        if (isset($parent['kode_isian_lanjutan'])) :
            unset($parent['kode_isian_lanjutan']);
            $parent['kode_isian_lanjutan'] = function ($model) {
                return $model->kode_isian_lanjutan;
            };
        endif;
        if (isset($parent['kode_penawaran'])) :
            unset($parent['kode_penawaran']);
            $parent['kode_penawaran'] = function ($model) {
                return $model->kode_penawaran;
            };
        endif;
        if (isset($parent['tgl_transaksi'])) :
            unset($parent['tgl_transaksi']);
            $parent['tgl_transaksi'] = function ($model) {
                return Yii::$app->formatter->asIddate($model->tgl_transaksi, false);
            };
        endif;
        if (isset($parent['total_harga_penawaran'])) :
            unset($parent['total_harga_penawaran']);
            $parent['total_harga_penawaran'] = function ($model) {
                return $model->total_harga_penawaran;
            };
        endif;
        if (isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function ($model) {
                return Yii::$app->formatter->asIddate($model->created_at, false);
            };
        endif;
        $parent['penawaran_detail'] = function ($model) {
            $rel = $model->getPenawaranDetails()->select([
                "kode_unik",
                "kode_penawaran",
                "id_material",
                "kisaran_harga",
                "jumlah",
                // "volume",
                "sub_harga",
            ])->all();
            if ($rel) :
                return $rel;
            endif;
            return null;
        };

        return $parent;
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_penawaran';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['kode_unik', 'kode_isian_lanjutan', 'id_isian_lanjutan', 'estimasi_waktu', 'kode_pembayaran'], 'required'],
            [['kode_unik'], 'string', 'max' => 50],
            [['harga_penawaran'], 'double', 'numberPattern' => '/^\d[\d,.]*$/'],
            [['tgl_transaksi'], 'safe'],
            [['total_harga_penawaran'], 'safe'],
            [['kode_unik'], 'unique'],
            [['id_isian_lanjutan', 'estimasi_waktu', 'id_kota'], 'integer'],
            [['id_isian_lanjutan'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\IsianLanjutan::className(), 'targetAttribute' => ['id_isian_lanjutan' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'id_isian_lanjutan' => 'Rencana Pembangunan',
            'estimasi_waktu' => 'Estimasi Hari',
            'id_kota' => 'Kota',
            'tgl_transaksi' => 'Tanggal Penawaran',
            'harga_penawaran' => 'Harga Penawaran',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'estimasi_waktu' => 'dalam satuan hari',
            'harga_penawaran' => 'satuan rupiah',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getIsianLanjutans()
    {
        return $this->hasMany(\app\models\IsianLanjutan::className(), ['id_penawaran' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getIsianLanjutan()
    {
        return $this->hasOne(\app\models\IsianLanjutan::className(), ['id' => 'id_isian_lanjutan']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPenawaranDetails()
    {
        return $this->hasMany(\app\models\PenawaranDetail::className(), ['id_penawaran' => 'id']);
    }



    /**
     * @inheritdoc
     * @return \app\models\query\PenawaranQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\PenawaranQuery(get_called_class());
    }



    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'id_isian_lanjutan',
            'estimasi_waktu',
            'harga_penawaran',
            'total_harga_penawaran',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    public function setRender($arr)
    {
        $this->_render = array_merge($this->_render, $arr);
    }

    public function removeRender($arr)
    {
        unset($this->_render[$arr]);
    }

    /**
     * Simplify return data xD
     */
    public function render()
    {
        return array_merge($this->_render, [
            "model" => $this,
        ]);
    }

    /**
     * override validate
     */
    public function validate($attributeNames = null, $clearErrors = true)
    {
        return parent::validate($attributeNames, $clearErrors);
    }

    /**
     * override load
     */
    public function load($data, $formName = null, $service = "web")
    {
        return parent::load($data, $formName);
    }
}
