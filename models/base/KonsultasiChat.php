<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use app\components\Constant;
use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "t_konsultasi_chat".
 *
 * @property integer $id
 * @property integer $konsultasi_id
 * @property integer $parent_message_id
 * @property integer $user_id
 * @property string $body
 * @property integer $media_id
 * @property string $created_at
 * @property string $deleted_at
 *
 * @property \app\models\Konsultasi $konsultasi
 * @property \app\models\Konsultasi $parentMessage
 * @property \app\models\User $user
 * @property \app\models\KonsultasiMedia $media
 * @property string $aliasModel
 */
abstract class KonsultasiChat extends \yii\db\ActiveRecord
{



    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['konsultasi_id'])) :
            unset($parent['konsultasi_id']);
        // $parent['konsultasi_id'] = function ($model) {
        //     return $model->konsultasi_id;
        // };
        // $parent['_konsultasi'] = function ($model) {
        //     $rel = $model->konsultasi;
        //     if ($rel) :
        //         return $rel;
        //     endif;
        //     return null;
        // };
        endif;
        if (isset($parent['parent_message_id'])) :
            unset($parent['parent_message_id']);
            $parent['parent_message_id'] = function ($model) {
                return $model->parent_message_id;
            };
            $parent['_parent_message'] = function ($model) {
                $rel = $model->parentMessage;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['user_id'])) :
            unset($parent['user_id']);
            $parent['user_id'] = function ($model) {
                return $model->user_id;
            };
            $parent['_user'] = function ($model) {
                $rel = $model->user;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['body'])) :
            unset($parent['body']);
            $parent['body'] = function ($model) {
                return $model->body;
            };
        endif;
        if (isset($parent['media_id'])) :
            unset($parent['media_id']);
            $parent['media_id'] = function ($model) {
                return $model->media_id;
            };
        // $parent['_media'] = function ($model) {
        //     $rel = $model->media;
        //     if ($rel) :
        //         return $rel;
        //     endif;
        //     return null;
        // };
        endif;
        if (isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function ($model) {
                return \app\components\Tanggal::toReadableDate($model->created_at, false);
            };
        endif;
        if (isset($parent['deleted_at'])) :
            unset($parent['deleted_at']);
            $parent['deleted_at'] = function ($model) {
                return $model->deleted_at;
            };
        endif;

        if (Constant::isUriContain(["/list-chat", "/save-chat"])) {
            $parent["is_mychat"] = function ($model) {
                return Yii::$app->user->id == $model->user_id;
            };
        }

        return $parent;
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_konsultasi_chat';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => false,
                'value' => date("Y-m-d H:i:s"),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['konsultasi_id', 'user_id', 'body'], 'required'],
            [['konsultasi_id', 'parent_message_id', 'user_id', 'media_id'], 'integer'],
            [['body'], 'string'],
            [['created_at', 'deleted_at'], 'safe'],
            [['konsultasi_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Konsultasi::className(), 'targetAttribute' => ['konsultasi_id' => 'id']],
            [['parent_message_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Konsultasi::className(), 'targetAttribute' => ['parent_message_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['user_id' => 'id']],
            // [['media_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\KonsultasiMedia::className(), 'targetAttribute' => ['media_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'konsultasi_id' => 'Konsultasi',
            'parent_message_id' => 'Induk Pesan',
            'user_id' => 'Pengguna',
            'body' => 'Isi Pesan',
            'media_id' => 'Media',
            'created_at' => 'Dibuat pada',
            'deleted_at' => 'Dihapus pada',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKonsultasi()
    {
        return $this->hasOne(\app\models\Konsultasi::className(), ['id' => 'konsultasi_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getParentMessage()
    {
        return $this->hasOne(\app\models\Konsultasi::className(), ['id' => 'parent_message_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    // public function getMedia()
    // {
    //     return $this->hasOne(\app\models\KonsultasiMedia::className(), ['id' => 'media_id']);
    // }



    /**
     * @inheritdoc
     * @return \app\models\query\KonsultasiChatQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\KonsultasiChatQuery(get_called_class());
    }



    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'konsultasi_id',
            'parent_message_id',
            'user_id',
            'body',
            'media_id',
            'created_at',
            'deleted_at',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    public function setRender($arr)
    {
        $this->_render = array_merge($this->_render, $arr);
    }

    public function removeRender($arr)
    {
        unset($this->_render[$arr]);
    }

    /**
     * Simplify return data xD
     */
    public function render()
    {
        return array_merge($this->_render, [
            "model" => $this,
        ]);
    }

    /**
     * override validate
     */
    public function validate($attributeNames = null, $clearErrors = true)
    {
        return parent::validate($attributeNames, $clearErrors);
    }

    /**
     * override load
     */
    public function load($data, $formName = null, $service = "web")
    {
        return parent::load($data, $formName);
    }
}
