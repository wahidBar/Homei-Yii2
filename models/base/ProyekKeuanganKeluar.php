<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "t_proyek_keuangan_keluar".
 *
 * @property integer $id
 * @property integer $id_proyek
 * @property string $no_po
 * @property string $dokumen_po
 * @property string $no_invoice
 * @property string $keterangan
 * @property string $tanggal
 * @property integer $total_jumlah
 * @property string $vendor
 * @property integer $tipe
 * @property integer $status
 * @property string $created_at
 * @property integer $created_by
 * @property string $updated_at
 * @property integer $updated_by
 * @property string $deleted_at
 * @property integer $deleted_by
 *
 * @property \app\models\Proyek $proyek
 * @property \app\models\User $createdBy
 * @property \app\models\User $updatedBy
 * @property \app\models\User $deletedBy
 * @property \app\models\ProyekKeuanganKeluarBayar[] $proyekKeuanganKeluarBayars
 * @property string $aliasModel
 */
abstract class ProyekKeuanganKeluar extends \yii\db\ActiveRecord
{



    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    const SCENARIO_PENGELUARAN = "scenario-pengeluaran";
    const SCENARIO_PO = "scenario-po";
    const SCENARIO_DELETE = 'delete';

    public $_render = [];

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['id_kategori'])) :
            unset($parent['id_kategori']);
            $parent['id_kategori'] = function ($model) {
                return $model->id_kategori;
            };
            $parent['_kategori'] = function ($model) {
                $rel = $model->getKategori()->select('id, nama_kategori')->one();
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['id_proyek'])) :
            unset($parent['id_proyek']);
            $parent['id_proyek'] = function ($model) {
                return $model->id_proyek;
            };
            $parent['_proyek'] = function ($model) {
                $rel = $model->getProyek()->select([
                    "id",
                    "nama_proyek"
                ])->one();
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['no_po'])) :
            unset($parent['no_po']);
            $parent['no_po'] = function ($model) {
                return $model->no_po;
            };
        endif;
        if (isset($parent['dokumen_po'])) :
            unset($parent['dokumen_po']);
            $parent['dokumen_po'] = function ($model) {
                return $model->dokumen_po;
            };
        endif;
        if (isset($parent['no_invoice'])) :
            unset($parent['no_invoice']);
            $parent['no_invoice'] = function ($model) {
                return $model->no_invoice;
            };
        endif;
        if (isset($parent['keterangan'])) :
            unset($parent['keterangan']);
            $parent['keterangan'] = function ($model) {
                return $model->keterangan;
            };
        endif;
        if (isset($parent['tanggal'])) :
            unset($parent['tanggal']);
            $parent['tanggal'] = function ($model) {
                return \app\components\Tanggal::toReadableDate($model->tanggal, false);
            };
        endif;
        if (isset($parent['total_jumlah'])) :
            unset($parent['total_jumlah']);
            $parent['total_jumlah'] = function ($model) {
                return $model->total_jumlah;
            };
        endif;
        if (isset($parent['total_dibayarkan'])) :
            unset($parent['total_dibayarkan']);
            $parent['total_dibayarkan'] = function ($model) {
                return $model->total_dibayarkan;
            };
        endif;
        if (isset($parent['dibayar'])) :
            unset($parent['dibayar']);
            $parent['dibayar'] = function ($model) {
                return $model->dibayar;
            };
        endif;
        if (isset($parent['vendor'])) :
            unset($parent['vendor']);
            $parent['vendor'] = function ($model) {
                return $model->vendor;
            };
        endif;
        if (isset($parent['tipe'])) :
            unset($parent['tipe']);
            $parent['tipe'] = function ($model) {
                return $model->tipe;
            };
            $parent['_tipe'] = function ($model) {
                return $model->getTipe();
            };
        endif;
        if (isset($parent['status'])) :
            unset($parent['status']);
            $parent['status'] = function ($model) {
                return $model->status;
            };
            $parent['_status'] = function ($model) {
                return $model->getStatus();
            };
        endif;
        if (isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function ($model) {
                return \app\components\Tanggal::toReadableDate($model->created_at, false);
            };
        endif;
        if (isset($parent['created_by'])) :
            unset($parent['created_by']);
            $parent['created_by'] = function ($model) {
                return $model->created_by;
            };
            $parent['_created_by'] = function ($model) {
                $rel = $model->createdBy;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['updated_at'])) :
            unset($parent['updated_at']);
            $parent['updated_at'] = function ($model) {
                return \app\components\Tanggal::toReadableDate($model->updated_at, false);
            };
        endif;
        if (isset($parent['updated_by'])) :
            unset($parent['updated_by']);
            $parent['updated_by'] = function ($model) {
                return $model->updated_by;
            };
            $parent['_updated_by'] = function ($model) {
                $rel = $model->updatedBy;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['deleted_at'])) :
            unset($parent['deleted_at']);
            $parent['deleted_at'] = function ($model) {
                return $model->deleted_at;
            };
        endif;
        if (isset($parent['deleted_by'])) :
            unset($parent['deleted_by']);
            $parent['deleted_by'] = function ($model) {
                return $model->deleted_by;
            };
            $parent['_deleted_by'] = function ($model) {
                $rel = $model->deletedBy;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['flag'])) :
            unset($parent['flag']);
        // $parent['flag'] = function ($model) {
        //     return $model->flag;
        // };
        endif;

        if (\app\components\Constant::isUriContain(["/keuangan/keluar/view", "/keuangan/po/view"])) {
            $parent['proyek_keuangan_keluar_detail'] = function ($model) {
                $rel = $model->getProyekKeuanganKeluarDetails()->select([
                    'id',
                    // 'id_keuangan_keluar',
                    'item',
                    'satuan',
                    'kuantitas',
                    'harga_satuan',
                    'jumlah',
                    'deskripsi',
                ])->all();
                return $rel;
            };
            $parent['proyek_keuangan_keluar_bayar'] = function ($model) {
                $rel = $model->getProyekKeuanganKeluarBayars()->select([
                    'id',
                    // 'id_proyek',
                    // 'id_keuangan_keluar',
                    'tanggal',
                    'dibayar',
                    // 'created_at',
                    // 'updated_at',
                    // 'deleted_at',
                    // 'created_by',
                    // 'updated_by',
                    // 'deleted_by',
                    // 'flag'
                ])->all();
                return $rel;
            };
        }



        return $parent;
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_proyek_keuangan_keluar';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => date("Y-m-d H:i:s"),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id_proyek', 'id_kategori', 'tanggal', 'vendor'], 'required'],
            [['id_proyek', 'total_jumlah', 'total_dibayarkan', 'tipe', 'status', 'created_by', 'updated_by', 'deleted_by', 'flag'], 'integer'],
            [['keterangan'], 'string'],
            [['tanggal', 'created_at', 'updated_at', 'deleted_at'], 'safe'],
            [['no_po', 'no_invoice', 'vendor'], 'string', 'max' => 100],
            [['dokumen_po'], 'string', 'max' => 150],
            [['id_proyek'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Proyek::className(), 'targetAttribute' => ['id_proyek' => 'id']],
            [['id_kategori'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\MasterKategoriKeuanganKeluar::className(), 'targetAttribute' => ['id_kategori' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            [['deleted_by'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['deleted_by' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'id_proyek' => 'Proyek',
            'id_kategori' => 'Kategori',
            'no_po' => 'No PO',
            'dokumen_po' => 'Dokumen PO',
            'no_invoice' => 'No Invoice',
            'keterangan' => 'Keterangan',
            'tanggal' => 'Tanggal',
            'total_jumlah' => 'Total Jumlah',
            'total_dibayarkan' => 'Total Dibayarkan',
            'vendor' => 'Vendor',
            'tipe' => 'Tipe',
            'status' => 'Status',
            'created_at' => 'Dibuat pada',
            'created_by' => 'Dibuat oleh',
            'updated_at' => 'Diubah Pada',
            'updated_by' => 'Diubah oleh',
            'deleted_at' => 'Dihapus pada',
            'deleted_by' => 'Dihapus oleh',
            'flag' => 'Flag'
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'tipe' => '0:BIASA;1:PO',
            'status' => '0:Blm Lunas;1:byr sebagian;2:byr',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKategori()
    {
        return $this->hasOne(\app\models\MasterKategoriKeuanganKeluar::className(), ['id' => 'id_kategori']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProyek()
    {
        return $this->hasOne(\app\models\Proyek::className(), ['id' => 'id_proyek']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDeletedBy()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'deleted_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProyekKeuanganKeluarBayars()
    {
        return $this->hasMany(\app\models\ProyekKeuanganKeluarBayar::className(), ['id_keuangan_keluar' => 'id']);
    }


    public function getProyekKeuanganKeluarDetails()
    {
        return $this->hasMany(\app\models\ProyekKeuanganKeluarDetail::class, ['id_keuangan_keluar' => 'id']);
    }



    /**
     * @inheritdoc
     * @return \app\models\query\ProyekKeuanganKeluarQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\ProyekKeuanganKeluarQuery(get_called_class());
    }



    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns_po = [
            'id',
            'id_proyek',
            'id_kategori',
            'no_po',
            'dokumen_po',
            'no_invoice',
            'keterangan',
            'tanggal',
            // 'total_jumlah',
            'vendor',
            // 'tipe',
            'status',
            'created_at',
            'created_by',
            'updated_at',
            'updated_by',
            'deleted_at',
            'deleted_by',
        ];


        $columns_pengeluaran = [
            'id',
            'id_proyek',
            'id_kategori',
            // 'no_po',
            // 'dokumen_po',
            'no_invoice',
            'keterangan',
            'tanggal',
            // 'total_jumlah',
            'vendor',
            // 'tipe',
            'status',
            'created_at',
            'created_by',
            'updated_at',
            'updated_by',
            'deleted_at',
            'deleted_by',
        ];

        $delete = [
            'deleted_at',
            'deleted_by',
            'flag'
        ];



        $parent[static::SCENARIO_PO] = $columns_po;
        $parent[static::SCENARIO_PENGELUARAN] = $columns_pengeluaran;
        $parent[static::SCENARIO_DELETE] = $delete;
        return $parent;
    }

    public function setRender($arr)
    {
        $this->_render = array_merge($this->_render, $arr);
    }

    public function removeRender($arr)
    {
        unset($this->_render[$arr]);
    }

    /**
     * Simplify return data xD
     */
    public function render()
    {
        return array_merge($this->_render, [
            "model" => $this,
        ]);
    }

    /**
     * override validate
     */
    public function validate($attributeNames = null, $clearErrors = true)
    {
        return parent::validate($attributeNames, $clearErrors);
    }

    /**
     * override load
     */
    public function load($data, $formName = null, $service = "web")
    {
        return parent::load($data, $formName);
    }
}
