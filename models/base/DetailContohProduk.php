<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "t_detail_contoh_produk".
 *
 * @property integer $id
 * @property integer $id_contoh_produk
 * @property string $pin_style
 * @property integer $x_pos
 * @property integer $y_pos
 * @property string $gambar
 * @property string $judul
 * @property integer $harga
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \app\models\TContohProduk $contohProduk
 * @property string $aliasModel
 */
abstract class DetailContohProduk extends \yii\db\ActiveRecord
{



    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['id_contoh_produk'])) :
            unset($parent['id_contoh_produk']);
            $parent['id_contoh_produk'] = function ($model) {
                return $model->id_contoh_produk;
            };
            $parent['_contoh_produk'] = function ($model) {
                $rel = $model->contohProduk;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['id_supplier_barang'])) :
            unset($parent['id_supplier_barang']);
            $parent['id_barang'] = function ($model) {
                return $model->id_supplier_barang;
            };
            $parent['_barang'] = function ($model) {
                $rel = $model->getSupplierBarang()->select([
                    'id',
                    'nama_barang',
                    'harga_ritel',
                    'gambar'
                ])->one();
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['x_pos'])) :
            unset($parent['x_pos']);
            $parent['x_pos'] = function ($model) {
                return $model->x_pos;
            };
        endif;
        if (isset($parent['y_pos'])) :
            unset($parent['y_pos']);
            $parent['y_pos'] = function ($model) {
                return $model->y_pos;
            };
        endif;
        if (isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function ($model) {
                return \app\components\Tanggal::toReadableDate($model->created_at, false);
            };
        endif;
        if (isset($parent['updated_at'])) :
            unset($parent['updated_at']);
            $parent['updated_at'] = function ($model) {
                return \app\components\Tanggal::toReadableDate($model->updated_at, false);
            };
        endif;



        return $parent;
    }

    /**
     * ENUM field values
     */
    // const PIN_STYLE_PIN = 'pin';
    // const PIN_STYLE_PIN_DOWN = 'pin-down';
    // var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_detail_contoh_produk';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => date("Y-m-d H:i:s"),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id_contoh_produk', 'id_supplier_barang', 'x_pos', 'y_pos'], 'required'],
            [['id_contoh_produk', 'id_supplier_barang', 'x_pos', 'y_pos'], 'integer'],
            [['created_at', 'updated_at'], 'safe'],
            [['id_contoh_produk'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\ContohProduk::className(), 'targetAttribute' => ['id_contoh_produk' => 'id']],
            [['id_supplier_barang'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\SupplierBarang::className(), 'targetAttribute' => ['id_supplier_barang' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'id_contoh_produk' => 'Contoh Produk',
            'id_supplier_barang' => 'Barang',
            'x_pos' => 'X Pos',
            'y_pos' => 'Y Pos',
            'created_at' => 'Dibuat pada',
            'updated_at' => 'Diubah Pada',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContohProduk()
    {
        return $this->hasOne(\app\models\ContohProduk::className(), ['id' => 'id_contoh_produk']);
    }

    public function getSupplierBarang()
    {
        return $this->hasOne(\app\models\SupplierBarang::className(), ['id' => 'id_supplier_barang']);
    }



    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'id_contoh_produk',
            'id_supplier_barang',
            'x_pos',
            'y_pos',
            'created_at',
            'updated_at',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    public function setRender($arr)
    {
        $this->_render = array_merge($this->_render, $arr);
    }

    public function removeRender($arr)
    {
        unset($this->_render[$arr]);
    }

    /**
     * Simplify return data xD
     */
    public function render()
    {
        return array_merge($this->_render, [
            "model" => $this,
        ]);
    }

    /**
     * override validate
     */
    public function validate($attributeNames = null, $clearErrors = true)
    {
        return parent::validate($attributeNames, $clearErrors);
    }

    /**
     * override load
     */
    public function load($data, $formName = null, $service = "web")
    {
        return parent::load($data, $formName);
    }
}
