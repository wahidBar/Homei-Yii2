<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "slides".
 *
 * @property integer $id
 * @property string $image
 * @property string $title
 * @property string $subtitle
 * @property string $button_link
 * @property string $aliasModel
 */
abstract class Slides extends \yii\db\ActiveRecord
{

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return rand() * 1000;
            };
        endif;
        if (isset($parent['image'])) :
            unset($parent['image']);
            $parent['image'] = function ($model) {
                return \Yii::$app->formatter->asMyimage($model->image, false);
            };
        endif;
        if (isset($parent['title'])) :
            unset($parent['title']);
            $parent['title'] = function ($model) {
                return $model->title;
            };
        endif;
        if (isset($parent['subtitle'])) :
            unset($parent['subtitle']);
            $parent['subtitle'] = function ($model) {
                return $model->subtitle;
            };
        endif;
        if (isset($parent['button_title'])) :
            unset($parent['button_title']);
            $parent['button_link'] = function ($model) {
                return $model->button_title;
            };
        endif;
        if (isset($parent['button_link'])) :
            unset($parent['button_link']);
            $parent['button_link'] = function ($model) {
                return $model->button_link;
            };
        endif;
        if (isset($parent['type'])) :
            unset($parent['type']);
            $parent['type'] = function ($model) {
                return $model->type;
            };
            $parent['_type'] = function ($model) {
                return $model->getType();
            };
        endif;
        if (isset($parent['redirect_type'])) :
            unset($parent['redirect_type']);
            $parent['redirect_type'] = function ($model) {
                return $model->redirect_type;
            };
            $parent['_redirect_type'] = function ($model) {
                return $model->getRedirectType();
            };
        endif;
        if (isset($parent['component'])) :
            unset($parent['component']);
            $parent['component'] = function ($model) {
                return $model->component;
            };
        endif;
        if (isset($parent['params'])) :
            unset($parent['params']);
            $parent['params'] = function ($model) {
                if ($model->params == null) return null;
                return json_decode($model->params);
            };
        endif;



        return $parent;
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'slides';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'subtitle'], 'required'],
            [['image'], 'required', 'on' => static::SCENARIO_CREATE],
            [['params', 'redirect_type'], 'safe'],
            [['image', 'title', 'subtitle', 'button_title', 'button_link'], 'string', 'max' => 255],
            [['button_link'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'image' => 'Gambar',
            'title' => 'Judul',
            'subtitle' => 'Sub Judul',
            'button_link' => 'Link Tombol',
            'button_title' => 'Judul Tombol',
            'component' => 'Komponen',
            'params' => 'Parameter',
            'redirect_type' => 'Tipe Pengalihan dengan link',
            'type' => 'Tipe Android',
        ];
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'image',
            'title',
            'subtitle',
            'button_title',
            'button_link',
            'component',
            'params',
            'redirect_type',
            'type',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    public function setRender($arr)
    {
        $this->_render = array_merge($this->_render, $arr);
    }

    public function removeRender($arr)
    {
        unset($this->_render[$arr]);
    }

    /**
     * Simplify return data xD
     */
    public function render()
    {
        return array_merge($this->_render, [
            "model" => $this,
        ]);
    }

    /**
     * override validate
     */
    public function validate($attributeNames = null, $clearErrors = true)
    {
        return parent::validate($attributeNames, $clearErrors);
    }

    /**
     * override load
     */
    public function load($data, $formName = null, $service = "web")
    {
        return parent::load($data, $formName);
    }
}
